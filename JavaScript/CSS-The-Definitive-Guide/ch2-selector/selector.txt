2.1 样式的基本规则

    CSS的主要优势之一是能轻易为同类型的所有元素应用一组样式。

2.1.1 元素选择符
    
    一个规则由两个基本部分构成：选择符(selector)和声明块(declaration block)。
其中元素选择符(element selector)通常是HTML元素。

    selector { property: value; }

2.1.2 声明和关键字

    声明块中有一个或多个声明。声明的格式是固定的，先是属性，然后是冒号，后面再
跟上值和分号。冒号和分号后面可以有零个或多个空白。值几乎都是一个关键字或以空格
分隔的多个关键字。如果声明中的属性或值有误，整个规则都将被忽略。

    CSS关键字通常以空格分隔，有时则使用斜线(/)或逗号。

-------------------------------------------------------------------------------
2.2 群组

2.2.1 群组选择符

    通用选择符(*)，这个选择符匹配所有元素。

2.2.2 群组声明

    多个声明写在一起，使用分号结尾。严格来说，一个规则中的最后一个声明的结尾可
以不带分号，但一般建议带上。

-------------------------------------------------------------------------------
2.3 类选择符和ID选择符

    除了直接使用文档中的元素之外，还可以使用类选择符和ID选择符，这样便能以一种
独立于元素的方式赋予样式。这两种选择符可以独立使用，也可以和元素选择符结合在一
起使用。

2.3.1 类选择符

    应用样式而不关心所涉及的元素，最常使用类选择符。在使用之前，要修改文档的
标记，让类选择符起作用。修改方式是设定class属性，把类选择符应用到元素上，必须
为元素class属性赋予适当的值。

    在CSS中，选择类的句法是在class属性的值前面加上点号(.)。如果想选择具有相同类
名的所有元素，可以活力通用选择符。

2.3.2 多个类

    根据HTML规范，class属性的值可以是多个词，词之间使用空格分隔。

2.3.3 ID选择符

    ID选择符的开头是个散列字元(#)，其引用的是id属性的值。ID选择符的通用选择符
也可以省略。与类选择符可以赋予任意个元素不同的是，ID选择符在一个HTML文档中只能
使用一次。且ID属性的值不能以空格分隔。

--------------------------------------------------------------------------------
2.4 属性选择符

    不管是类选择符还是ID选择符，我们选择的其实都是属性的值。

2.4.1 简单属性选择符

    如果想选择具有某个属性的元素，而不管属性的值是什么，可以使用简单属性选择符。
    
    element[attribute] { property: value; }

2.4.2 根据精准的属性值选择

    还可以进一步缩小范围，只选择属性为特定值的元素。

    element[attribute="value"] { property: value; }

2.4.3 根据部分属性值选择

    可根据属性值的一部分选择元素，而不是完整的值。使用属性选择符匹配子串：

    [foo|='bar']    选择的元素有foo属性，且其值以bar和一个英文破折号开头或bar
    
    [foo~='bar']    选择的元素有foo属性，且其值是包含bar这个词的一组词

    [foo*='bar']    选择的元素有foo属性，且其值包含子串bar

    [foo^='bar']    选择的元素有foo属性，且其值以bar开头

    [foo$='bar']    选择的元素有foo属性，且其值以bar结尾

    一种特别的属性选择符[att|='val']

    匹配以空格分隔的一组词中的一个[att~='val']

    匹配属性值的子串[att*='val']

    匹配属性值开头的子串[att^='val']

    匹配属性值结尾的子串[att$='val']

2.4.4 不区分大小写的标识符

    CSS Selectors Level 4为属性选择符引入一个不区分大小写的选项。在结束方括号前
加上i，属性选择符便不农牧局文档语言的要求，匹配属性值时不区分大小写。

--------------------------------------------------------------------------------
2.5 根据文档结构选择

    CSS可以通过文档结构确定使用哪些样式，以及如何应用样式。

2.5.1 理解父子关系

    HTML文档中的元素是一种层次结构。在文档的层次结构中，如果一个元素的位置在另
一个元素的上访，我们就前者是后者的父元素。

2.5.2 后代选择符

2.5.3 选择子元素

2.5.4 选择紧邻同胞元素

2.5.5 选择后续同胞

--------------------------------------------------------------------------------
2.6 伪类选择符

    利用这种选择符可以为文档中不一定真实存在的结构指定样式，或者为某些元素
（甚至文档本身）的特定状态赋予幽灵类。

2.6.1 拼接伪类

2.6.2 结构伪类

2.6.3 动态伪类

