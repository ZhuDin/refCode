第10章 函数

    函数实际上是对象，每个函数都是Function类型的实例，而Function也有属性和方法，
跟其他引用类型一样。因为函数是对象，所以函数名就是指向函数对象的指针，而且不一
定与函数本身紧密绑定。

10.1 箭头函数

    ECMAScript6新增了胖箭头(=>)语法定义函数表达式的能力。

10.2 函数名
    
    因为函数名就是指向函数的指针，所以它们跟其他包含对象指针的变量具有相同的
行为。

    ECMAScript6的所有函数对象都会暴露一个只读的name属性，其中包含关于函数的
信息。多数情况下，这个属性保存的就是一个函数标识符，或者说是一个字符串化的变量
名。即使函数没有名称，也会如实显示成空字符串。

10.3 理解参数

    ECMAScript函数既不关心传入的参数个数，也不关心这些参数的数据类型。在使用
function关键字定义（非箭头）函数时，可以在函数内部访问arguments对象，从中取得
传进来的每个参数值。

10.4 没有重载

    ECMAScript函数不能像传统编程那样重载，因为参数是由包含零个或多个值的数组
表示的。没有函数签名，自然也就没有重载。

10.5 默认参数值

--------------------------------------------------------------------------------
10.6 参数扩展和收集

10.7 函数声明与函数表达式

    JavaScript引擎在任何代码执行之前，会先读取函数声明，并在执行上下文中生成函
数定义。而函数表达式必须等到代码执行到它那一行，才会在执行上下文中生成函数定义。
    
10.8 函数作为值

10.9 函数内部

    在ECMAScript5中，函数内部存在两个特殊的对象：arguments和this。ECMAScript6
又新增了new.target属性。

