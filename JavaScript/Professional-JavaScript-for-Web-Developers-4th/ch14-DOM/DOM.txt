第14章 DOM

    文档对象模型(DOM, Document Object Model)是HTML和XML文档的编程接口。DOM表示
由多层节点构成的文档，通过它开发者可以添加、删除和修改页面的各个部分。

14.1 节点层级

    任何HTML或XML文档都可以用DOM表示为一个由节点构成的层级结构。

14.1.1 Node类型

    DOM Level 1描述了名为Node的接口，这个接口是所有DOM节点类型都必须实现的。
Node接口在JavaScript中被实现为Node类型。在JavaScript中，所有节点类型都继承Node
类型，因此所有类型都共享相同的基本属性和方法。

    每个节点都有nodeType属性，表示该节点的类型。节点类型由定义在Node类型上的
12个数值常量表示：

    ·Node.ELEMENT_NODE          (1)

    ·Node.ATTRIBUTE_NODE        (2)

    ·Node.TEXT_NODE             (3)

    ·Node.CDATE_SECTION_NODE    (4)

    ·Node.ENTITY_REFERENCE_NODE (5)

    ·Node.ENTITY_NODE           (6)

    ·Node.PROCESSING_INSTRUCTION_NODE   (7)

    ·Node.COMMENT_NODE          (8)

    ·Node.DOCUMENT_NODE         (9)

    ·Node.DOCUMENT_TYPE_NODE    (10)

    ·Node.DOCUMENT_FRAGMENT_NODE(11)

    ·Node.NOTATION_NODE         (12)

--------------------------------------------------------------------------------
14.1.2 Document类型

    Document类型是JavaScript中表示文档节点的类型。在浏览器中，文档对象docuemnt
是HTMLDocument的实例，表示整个HTML页面。document是window对象的属性，因此是一个
全局对象。

14.1.3 Element类型

    Element表示XML或html元素，对外暴露出访问元素标签名、子节点和属性的能力。

14.1.4 Text类型

    Text节点由Text类型表示，包含按字面解释的纯文本，了可能包含转义后的HTML字符，
但不含HTML代码。

    Text节点中包含的文本可以通过nodeValue属性访问，也可以通过data属性访问，这两
个属性包含相同的值。也会在另一个属性反映出来。文本节点暴露了以下操作文本的方法：

    ·appendData(text)，向节点末尾添加文本text；

    ·deleteData(offset，count)，从位置offset开始删除count个字符；

    ·insertData(offset, text)，在位置offset插入text；

    ·replaceData(offset, count, text)，用text替换从位置offset到offset+count的
      文本；

    ·splitText(offset)，在位置offset将当前文本节点拆分为两个文本节点；

    ·substringData(offset, count)，提取从位置offset到offset+count的文本。

    除了以上方法，还可通过length属性获取文本节点中包含的字符数量。这个值等于
nodeValue.length和data.length。

14.1.5 Comment类型

    DOM中的注释通过Comment类型表示。

14.1.6 CDATASection类型

    CDATASection类型表示XML中特有的CDATA区块。

14.1.7 DocumentType类型

    DocumentType类型的节点包含文档的文档类型(doctype)信息。

14.1.8 DocumentFragment类型

14.1.9 Attr类型

--------------------------------------------------------------------------------
14.2 DOM编程

14.2.1 动态脚本

    <script>元素用于向网页中插入JavaScript代码，可以是src属性包含的外部文件，也
可以是作为该元素内容的源代码。

14.2.2 动态样式

    CSS样式在HTML页面中可以通过两个元素加载。<link>元素用于包含CSS外部文件，而
<style>元素用于添加嵌入样式。

14.2.3 操作表格

14.2.4 使用NodeList

--------------------------------------------------------------------------------
14.3 MutationObserver接口

    