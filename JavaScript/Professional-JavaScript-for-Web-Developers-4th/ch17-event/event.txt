第17章 事件

    JavaScript与HTML的交互是通过事件实现的，事件代表文档或浏览器窗口中某个有意
义的时刻。可以使用仅在事件发生时执行的监听器订阅事件。

17.1 事件流

17.1.1 事件冒泡

    IE事件流被称为事件冒泡，这是因为事件被定义为从最具体的元素（文档树中最深的
节点）开始触发，然后向上传播至没有那么具体的元素（文档）。

17.1.2 事件捕获

    Netscape Communicator团队提出了另一种事件捕获的事件流。事件捕获的意思是最不
具体的节点应该最先收到事件，而最具体的节点应该最后收到事件。事件捕获实际上是为
了在事件到达最终目标前拦截事件。

    事件捕获得到了所有现代浏览器的支持，浏览器从window对象开始捕获事件，而
DOM2 Events规范规定的是从document开始。

17.1.3 DOM事件流

    DOM2 Events规范规定事件流分为3个阶段：事件捕获、到达目标和事件冒泡。

--------------------------------------------------------------------------------
17.2 事件处理程序

    事件意味着用户或浏览器执行的某种动作。为响应事件而调用的函数被称为事件处理
程序（或事件监听器）。事件处理程序的名字以"on"开头。

17.2.1 HTML事件处理程序

17.2.2 DOM0事件处理程序

17.2.3 DOM2事件处理程序

    DOM2 Event为事件处理程序的赋值和移除定义了两个方法:addEventListener()和
removeEventListener()。这两个方法暴露在所有DOM节点上，它们接收3个参数：事件名、
事件处理函数和一个布尔值，true表示在捕获阶段调用事件处理程序，false（默认值）
表示在冒泡阶段调用事件处理程序。

17.2.4 IE事件处理程序

--------------------------------------------------------------------------------
17.3 事件对象

    在DOM中发生事件时，所有相关信息都会被收集并存储在一个名为event的对象中。

17.3.1 DOM事件对象

    在DOM合规的浏览器中，event对象是传给事件处理程序的唯一参数。

17.3.2 IE事件对象

--------------------------------------------------------------------------------
17.4 事件类型

    Web浏览器可以发生很多多种事件。DOM3 Event定义了如下事件类型

    ·用户界面事件(UIEvent)：涉及与BOM交互的通用浏览器事件

    ·焦点事件(FocusEvent)：在元素获得和失去焦点时触发

    ·鼠标事件(MouseEvent)：使用鼠标在页面上执行某些操作时触发

    ·滚轮事件(WheelEvent)：使用鼠标滚轮（或类似设备）时触发

    ·输入事件(InputEvent)：向文档中输入文本时触发

    ·键盘事件(KeyboardEvent)：使用键盘在页面上执行某些操作时触发

    ·合成事件(CompositionEvent)：使用某种IME输入字符时触发

17.5 内存与性能

17.6 模拟事件