第2章 Python语言基础

2.1 Python语法特点

2.1.1 注释规则

    在Python中，通常包括3种类型的注释，分别是单行注释、多行注释和文件编码声明
注释。

    1.单行注释

    在Python中，使用#作为单行注释的符号。从符号#开始直到换行为止，其后面的所有
内容都作为注释的内容被Python编译器忽略。单选注释可以出现在代码的任意位置，但是
不能分隔关键字和标识符。

    2.多行注释

    在Python中并没有一个单独的多行注释标记，而是将包含在一对三引号号
（即'''...'''或者"""..."""）中，并且不属于任何语句的内容则认为是注释。由于这样
的代码可以分为多行编写，因此也作为多行注释。

    多行注释通常用来为Python文件、模块、类或者函数等添加版权、功能等信息。如果
三引号出现在语句中，那么就是字符串。

    3.文件编码声明注释

    在Python3中，默认采用的文件编码是UTF-8。这种编码支持世界上大多数语言的字符。
如果不想使用默认编码，就需要在文件的第一行声明文件的编码，即使用文件编码声明注
释。语法格式如：# -*- coding:编码 -*-

2.1.2 代码缩进

    Python不像其他程序设计语言（如Java或者C语言）那样采用大括号"{}"分隔代码块，
而是采用代码缩进和冒号":"区分代码之间的层次。

    缩进可以使用空格或者Tab键实现。其中，如果使用空格，则通常情况下采用4个空格
作为一个缩进量；而如果使用Tab键，则采用一个Tab键作为一个缩进量。

    在Python中，对于类定义、函数定义、流程控制语句，以及异常处理语句等，行尾的
冒号和下一行的缩进表示一个代码块的开始；而缩进结束，则表示一个代码块的结束。

    Python对代码的缩进要求非常严格，同一级别的代码块的缩进量必须相同。

2.1.3 编码规范

    1.编写规则

    Python中采用PEP8作为编码规范。

    ·每个import语句只导入一个模块

    ·不要在行尾添加分号，也不要用分号将两条命令放在同一行

    ·建议每行不超过80个字符，如果超过，建议使用小括号"()"将多行内容隐式连接

    ·使用必要的空行可以增加代码的可读性

    ·通常情况，运算符两侧、函数参数之间、逗号","两侧建议使用空格进行分隔

    ·应该避免在循环中使用+和+=操作符累加字符串

    ·适当使用异常处理结构提高程序容错性

    2.命名规范

    使用命名规则可以更加直观地了解代码所代表的含义。

    ·模块名尽量短小，并且使用全部小宝字母，可以使用下划线分隔多个字母

    ·包名尽量短小，并且使用全部小写字母，不推荐使用下画线

    ·类名采用单词首字母大写形式（即Pascal风格）

    ·模块内部的类采用下画线"_"+Pascal风格的类名组成

    ·函数、类的属性和方法命名规则同模块类似

    ·常量命名时采用全部大写字母，可以使用下画线

    ·使用双下画线"__"开头的实例变量或方法是类私有的

--------------------------------------------------------------------------------
2.2 Python中的变量

2.2.1 保留字和标识符

    1.保留字

    保留字是Python中已经被赋予特定意义的一些单词，开发程序时，不可以把这些保留
字作为变量函数、类、模块和其他对象的名称来使用。Python中保留字如下：

    and     as      assert      break       class       continue

    def     del     elif        else        except      finally

    for     from    False       global      if          import

    in      is      lambda      nonlocal    not         None

    or      pass    raise       return      try         True

    while   with    yield

    Python中保留字可以通过IDLE中输入以下代码查看：
    
    >>> import keyword
    >>> keyword.kwlist

    2.标识符

    Pytyon语言标识符命名规则如下：

    (1)由字母、下画线"_"和数字组成，并且第一个字符不能是数字

    (2)不能使用Python中的保留字

    (3)区分字母大小写

    (4)Python中以下画线开头的标识符有特殊意义，一般应避免使用

    ·以单下画线开头的标识符表示不能直接访问的类属性

    ·以双下画线开头的标识符表示类的私有成员

    ·以双下画线开头和结尾的是Python中专用的标识

2.2.2 理解Python的变量

2.2.3 定义变量

    在Python中，不需要先声明变量名及其类型，直接赋值即可创建各种类型的变量。变
量的命名应遵循以下几条规则：

    ·变量名必须是一个有效的标识符

    ·变量名不能使用Python中的保留字

    ·慎用小写字母l和大写字母O

    ·应选择有意义的单词作为变量名

    Python是一种动态类型的语言，变量的类型可以随时变化。可以使用type()函数返回
变量类型。

    在Python中，允许多个变量指向同一个值，使用内置函数id()获取变量的地址，将得
到相同的内存地址结果。

--------------------------------------------------------------------------------
2.3 基本数据类型

2.3.1 数字

    在Python中，数字类型主要包括整数、浮点数和复数。

    1.整数

    整数用来表示整数数值，即没有小数部分的数值。在Python中，整数包括正整数、负
整数和0，并且它的位数是任意的（当超过计算机自身的计算功能时，会自动转用高精度计
算）。

    整数类型包括十进制、八进制、十六进制和二进制。

    2.浮点数

    浮点数由号数部分和小数部分组成，主要用于处理包括小数的数。

    3.复数

    Python中复数与数学中的复数的形式完全一致，都是由实部和虚部组成，并且使用j
或J表示虚部。当表示一个复数时，可以将其实部和虚部相加。

2.3.2 字符串

    字符串就是连续的字符序列，可以是计算机所能表示的一切字符的集合。在Python中，
字符串属于不可变序列，通常使用单引号、双引号或者三引号括起来。

    字符串开始和结尾使用的引号必须一致。

    Python中的字符串还支持转义字符。所谓转义字符，是指使用反斜杠"\"对一些特殊字
符进行转义。

    在字符串定界符引号的前面加上字母r(或R)，那么该字符串将原样输出，其中的转义
字符将不进行转义输出。

2.3.3 布尔类型

    布尔类型主要用来表示真或假的值。在Python中，标识我们走吧True和False被解释为
布尔值。另外，Python中的布尔值可以转换为数值，其中True表示1，而False则表示0。

    在Python中，对所有的对象都可以进行真值测试。其中，只有下面4种情况得到的值
为假，其他对象在if或者while语句中都表示为真。

    ·False或者None

    ·数值中的0，包括0、0.0、虚数0

    ·空序列，包括字符串、空元组、空列表、空字典

    ·自定义对象的实例，该对象的__bool__方法返回False，或者__len__方法返回0

2.3.4 数据类型转换

--------------------------------------------------------------------------------
2.4 基本输入和输出

2.4.1 使用input()函数输入

    在Python中，使用内置的函数input()可以接收用户通过键盘输入的内容。input()函
数的基本用法如下：variable = input("提示文字")

2.4.2 使用print()函数输出

    在Python中，默认情况下，使用内置的函数print()可以将结果输出到标准控制台上，
其基本语法格式如下：print(输出内容)