第5章 基本引用类型

    引用值（或者对象）是某个特定引用类型的实例。引用类型有时候也被称为对象定义，
因为他们描述了自己的对象应有的属性和方法。

    对象被认为是某个特定引用类型的实例。新对象通过使用new操作符后跟一个构造函数
(constructor)来创建。构造函数就是用来创建新的对象的函数。

--------------------------------------------------------------------------------
5.1 Date

    ECMAScript的Date类型参考了Java早期版本中的java.util.Date。为此，Date类型将
日期保存为自协调世界时(UTC，Universal Time Coordinated)时间1970年1月1日年夜
（零时）至今所经过的毫秒数。

    在不给Date构造函数传参数的情况下，创建的对象将保存当前日期和时间。

5.1.1 继承的方法

    与其他类型一样，Date类型重写了toLocaleString()、toString()和valueof()方法。
但与其他类型不同，重写后这些方法的返回值不一样。

5.1.2 日期格式化方法

    Date类型有几个专门用于格式化日期的方法，它们都会返回字符串：
    
    toDateString()显示日期中的周几、月、日、年；

    toTimeString()显示日期中的时、分、秒和时区；

    toLocaleDateString()显示日期中的周几、月、日、年；

    toLocaleTimeString()显示日期中的时、分、秒；

    toUTCString()显示完整的UTC日期。

5.1.3 日期/时间组件方法

--------------------------------------------------------------------------------
5.2 RegExp
    
    ECMAScript通过RegExp类型支持正则表达式。正则表达式使用类似Perl的简洁语法来
创建。
    let expression = /pattern/flags

    与其他语言中的正则表达式类似，所有元字符在模式中也必须转义，包括：
    ( [ { \ ^ $ | ) ] } ? * + .

5.2.1 RegExp实例属性

--------------------------------------------------------------------------------
5.4 单例内置对象

    ECMA-262对内置对象的定义是“任何由ECMAScript实现提供、与宿主环境无关，并在
ECMAScript程序开始执行时就存在的对象”。

5.4.1 Global
    
    ECMA-262规定Global对象为一种兜底对象，它所针对是不属于任何对象的属性和方法。
在全局作用域中定义的变量和函数都会变成Global对象的属性。具体如下：

    undefined           特殊值undefined
    
    NaN                 特殊值NaN
    
    Infinity            特殊值Infinity

    Object              Object的构造函数

    Array               Array的构造函数

    Function            Function的构造函数

    Boolean             Boolean的构造函数

    String              String的构造函数

    Number              Number的构造函数

    Date                Date的构造函数

    RegExp              RegExp的构造函数

    Symbol              Symbol的构造函数

    Error               Error的构造函数

    EvalError           EvalError的构造函数

    RangeError          RangeError的构造函数

    ReferenceError      ReferenceError的构造函数

    SyntaxError         SyntaxError的构造函数

    TypeError           TypeError的构造函数

    URIError            URIError的构造函数

    虽然ECMA-262没有规定直接访问Global对象的方式，但浏览器将window对象实现为
Global对象的代理。因此，所有全局作用域中声明的变量和函数都变成了window的属性。

    另一种获取Global对象的方式是使用如下的代码：
    let global = function() {
        return this;
    }();

    上面代码创建一个立即调用的函数表达式，返回了this值。当一个函数在没有明确指
定this值的情况下执行时，this值等于Global对象。因此，调用一个简单返回this的函数
是在任何执行上下文中获取Global对象的通用方式。

--------------------------------------------------------------------------------
5.4.2 Math

    ECMAScript提供了Math对象作为保存数学公式、信息和计算的地方。Math对象提供了
一些辅助计算的属性和方法。

    Math.E          自然对数的基数e的值

    Math.LN10       10为底的自然对数

    Math.LN2        2为底数的自然对数

    Math.LOG2E      以2为底e的对数

    Math.LOG10E     以10为底e的对数

    Math.PI         PI的值

    Math.SQRT1_2    1/2的平方根

    Math.SQRT2      2的平方根

    舍入方法
    ·Math.ceil()方法始终向上舍入为最接近的整数
    ·Math.floor()方法始终向下舍入为最接近的整数
    ·Math.rouhd()方法执行四舍五入
    ·Math.fround()方法返回数值最接近的单精度（32位）浮点值表示

    Math.random()方法返回一个0~1范围内的随机数，其中包含0但不包含1。

    可以基于如下公式使用Math.random()从一组整数中随机选择一个数：
    number = Math.floor(Math.random() * total_number_of_choice + first_value)

    如果是为了加密而需要生成随机数，建议使用window.crypto.getRandomValue()。
