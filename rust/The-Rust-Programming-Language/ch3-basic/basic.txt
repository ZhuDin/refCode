第3章 通用编程概念

变量与可变量

    Rust中的变量默认是不可变的。可以通过在声明变量名称前添加mut关键字来使
其可变。

变量与常量之间的不同

    变量的不可变性与另一个常见的编程概念：常量(constant)之间存在一些细微的
差别。

    首先，我们不能用mut关键字来修饰一个常量。常量不仅是默认不可变的，它还总
是不可变的。

    其次需要使用const关键字而不是let关键字来声明一个常量。在声明的同时，必须
显式地标注值的类型。

    再次，常量可以被声明在任何作用域中，甚至包括全局作用域。

    最后，只能将常量绑定到一个常量表达式上，而无法将一个函数的返回值，或其他
需要在运行时计算的值绑定到常量上。

    在Rust中，约定俗成地使用下画线分隔的全大写字母来命名一个常量，并在数值中
插入下画线来提高可读性。

--------------------------------------------------------------------------------
隐藏

    当一个新声明的变量可以覆盖掉旧的同名变量，在Rust中，把这一现象描述为：第
一个变量被第二个变量隐藏(shadow)了。这意味着我们随后使用这个名称时，它指向的
将会是第二个变量。

    隐藏机制不同于将变量声明为mut，因为如果不使用let关键字重新为变量赋值，则
会导致编译错误。

    隐藏机制与mut的另一个区别在于：由于重复使用let关键字会创建出新的变量，所
以可以在利用变量名称的同时改变它的类型。

--------------------------------------------------------------------------------
数据类型

    Rust是一门静态类型语言，这意味着它在编译程序的过程中需要知道所有变量的具
体类型。

标题类型

    标题类型是单个值类型的统称。Rust中内建了4种基础的标题类型：整数、浮点数、
布尔值及字符。

    整数是指那些没有小数部分的数字。每一个长度不同的值都存在有符号和无符号两
种变体，它们可以用来描述不同类型的整数。

    长度          有符号           无符号
    8-bit           i8              u8
    16-bit          i16             u16
    32-bit          i32             u32
    64-bit          i64             u64
    arch            isize           usize

    有符号和无符号代表了一个整数是否拥有描述负数的能力。